version: '3'

networks:
  app:

volumes:
  pgdata:

services:
  app:
    container_name: app
    build:
      context: .
      target: development
    image: 'student-service'
    command: yarn start:dev
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    ports:
      - ${PORT}:${PORT}
    networks:
      - app
    depends_on:
      - postgres
      - zookeeper
      - kafka

  postgres:
    container_name: postgres
    image: 'postgres:13.2-alpine'
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - app
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_NAME}
      - PG_DATA=${PG_DATA}
    volumes:
      - pgdata:${PG_DATA}

  zookeeper:
    container_name: zookeeper
    image: 'bitnami/zookeeper:latest'
    ports:
      - ${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}
    networks:
      - app
    restart: always
    env_file:
      - .env
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    image: 'bitnami/kafka:latest'
    ports:
      - ${KAFKA_PORT}:${KAFKA_PORT}
    networks:
      - app
    depends_on:
      - zookeeper
    restart: always
    env_file:
      - .env
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:${KAFKA_PORT}
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${KAFKA_HOST}:${KAFKA_PORT}
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:${ZOOKEEPER_PORT}
      - ALLOW_PLAINTEXT_LISTENER=yes
